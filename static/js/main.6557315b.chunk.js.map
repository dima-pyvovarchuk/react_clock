{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","console","log","toLocaleTimeString","setState","prevProps","name","props","clearInterval","className","toLocaleString","Component","App","hasClock","clockName","getRandomName","randomName","Math","random","toString","slice","showClock","hideClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAO,IAAIC,KAGjBK,QAAQC,IAAIP,EAAKQ,sBAEjB,EAAKC,SAAS,CAAET,WACf,OAfP,gCAkBE,SAAmBU,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCL,QAAQC,IAAR,uBAA4BG,EAAUC,KAAtC,eAAiDR,KAAKS,MAAMD,SArBlE,kCAyBE,WACEE,cAAcV,KAAKD,WA1BvB,oBA6BE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,6CACA,6BACGX,KAAKS,MAAMD,OAGd,uBAEA,+CACA,6BACGR,KAAKJ,MAAMC,KAAKe,0BAzC3B,GAA2BC,aCDrBC,E,4MACJlB,MAAyB,CACvBmB,UAAU,EACVC,UAAW,W,EAQbC,cAAgBf,aAAY,WAC1B,IAAMgB,EAAaC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAErD,EAAKhB,SAAS,CAAEU,UAAU,SAAD,OAAWE,OACnC,M,EAEHK,UAAY,WACV,EAAKjB,SAAS,CAAES,UAAU,K,EAG5BS,UAAY,WACV,EAAKlB,SAAS,CAAES,UAAU,K,uDAhB5B,WACEU,SAASC,iBAAiB,QAAS1B,KAAKuB,WACxCE,SAASC,iBAAiB,cAAe1B,KAAKwB,a,oBAiBhD,WACE,MAAgCxB,KAAKJ,MAA7BmB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKL,UAAU,MAAf,UACE,6CACA,uBAECI,GAAY,cAAC,EAAD,CAAOP,KAAMQ,W,GAjChBH,aAuCHC,IC7Cfa,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.6557315b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n\n      this.setState({ date });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <h2>Clock Name:</h2>\n        <h3>\n          {this.props.name}\n        </h3>\n\n        <hr />\n\n        <h2>Current Date:</h2>\n        <h4>\n          {this.state.date.toLocaleString()}\n        </h4>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nclass App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-1',\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', this.showClock);\n    document.addEventListener('contextmenu', this.hideClock);\n  }\n\n  getRandomName = setInterval(() => {\n    const randomName = Math.random().toString().slice(2, 6);\n\n    this.setState({ clockName: `Clock-${randomName}` });\n  }, 3300);\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hideClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <hr />\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}